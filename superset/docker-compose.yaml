#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image apache/superset:${TAG:-1.5.2}
x-superset-depends-on: &superset-depends-on
-   db
-   redis
x-superset-volumes: &superset-volumes
    # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
-   ${DOCKER_DIRECTORY}/superset/docker:/app/docker
-   superset_home:/app/superset_home
x-superset-networks: &superset-networks
    internal:
x-superset-shared-networks: &superset-shared-networks
    internal:
    traefik:

version: '3.7'

services:
    redis:
        image: redis:latest
        container_name: superset_cache
        restart: unless-stopped
        volumes:
        -   redis:/data
        networks: *superset-networks

    db:
        env_file: ${DOCKER_DIRECTORY}/superset/docker/.env-non-dev
        image: postgres:10
        container_name: superset_db
        restart: unless-stopped
        volumes:
        -   db_home:/var/lib/postgresql/data
        networks: *superset-networks

    superset:
        env_file: ${DOCKER_DIRECTORY}/superset/docker/.env-non-dev
        image: *superset-image
        container_name: superset_app
        command: [/app/docker/docker-bootstrap.sh, app-gunicorn]
        user: root
        restart: unless-stopped
        ports:
        -   8088:8088
        depends_on: *superset-depends-on
        volumes: *superset-volumes
        networks: *superset-shared-networks
        labels:
            traefik.enable: true
            traefik.http.routers.superset-rtr.rule: Host(`${SUPERSET_SUBDOMAIN:-superset}.${DOMAIN_NAME}`)
            traefik.http.routers.superset-rtr.service: superset-svc
            traefik.http.services.superset-svc.loadbalancer.server.port: 8088
            traefik.http.routers.superset-rtr.entrypoints: https
            traefik.http.routers.superset-rtr.middlewares: chain-oauth-google@file

    superset-init:
        image: *superset-image
        container_name: superset_init
        command: [/app/docker/docker-init.sh]
        env_file: ${DOCKER_DIRECTORY}/superset/docker/.env-non-dev
        depends_on: *superset-depends-on
        user: root
        volumes: *superset-volumes
        healthcheck:
            disable: true
        networks: *superset-networks

    superset-worker:
        image: *superset-image
        container_name: superset_worker
        command: [/app/docker/docker-bootstrap.sh, worker]
        env_file: ${DOCKER_DIRECTORY}/superset/docker/.env-non-dev
        restart: unless-stopped
        depends_on: *superset-depends-on
        user: root
        volumes: *superset-volumes
        healthcheck:
            test: [CMD-SHELL, celery inspect ping -A superset.tasks.celery_app:app -d celery@$$HOSTNAME]
        networks: *superset-networks

    superset-worker-beat:
        image: *superset-image
        container_name: superset_worker_beat
        command: [/app/docker/docker-bootstrap.sh, beat]
        env_file: ${DOCKER_DIRECTORY}/superset/docker/.env-non-dev
        restart: unless-stopped
        depends_on: *superset-depends-on
        user: root
        volumes: *superset-volumes
        healthcheck:
            disable: true
        networks: *superset-networks

volumes:
    superset_home:
        external: false
    db_home:
        external: false
    redis:
        external: false

networks:
    traefik:
        external: true
        name: traefik_traefik
    internal:
        driver: bridge
    docker:
        external: true
        name: traefik_docker
